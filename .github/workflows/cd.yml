name: CD Workflow
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into Container Registry
        uses: docker/login-action@v1
        with:
          registry: container.chitoku.jp
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Cache Buildx
        uses: actions/cache@v2
        with:
          path: /tmp/buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: buildx-
      - name: Unpackage fonts
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.FONTS_PASSPHRASE }} --output client/fonts.tar.gz client/fonts.tar.gz.gpg
          cd client/fonts
          tar xf ../fonts.tar.gz
      - name: Build and push
        uses: docker/bake-action@v1.6.0
        with:
          files: docker-bake.hcl
          push: true
          set: |
            *.cache-from=type=local,src=/tmp/buildx-cache
            *.cache-to=type=local,mode=max,dest=/tmp/buildx-cache.new
      - name: Move cache
        run: |
          rm -rf /tmp/buildx-cache
          mv /tmp/buildx-cache{.new,}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      - name: Set context
        uses: azure/k8s-set-context@v1
        with:
          method: service-account
          k8s-url: https://k8s.chitoku.jp
          k8s-secret: ${{ secrets.K8S_SECRET }}
      - name: Rollout restart
        run: kubectl rollout restart deployment/homochecker-app
